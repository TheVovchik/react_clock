{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","everySecondClock","this","window","setInterval","currentTime","console","info","toUTCString","slice","setState","prevProps","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","clockNamePropery","stopClock","e","preventDefault","startClock","getRandomName","value","now","toString","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,iBAAmB,EALrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,iBAAmBE,OAAOC,aAAY,WACzC,IAAMC,EAAc,IAAIL,KAGxBM,QAAQC,KAAKF,EAAYG,cAAcC,OAAO,IAAK,IAEnD,EAAKC,SAAS,CAAEX,MAAOM,MACtB,OAfP,gCAkBE,SAAmBM,GACbA,EAAUC,OAASV,KAAKW,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDV,KAAKW,MAAMD,SArBpE,kCAyBE,WACET,OAAOY,cAAcb,KAAKD,oBA1B9B,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAa,EAASV,KAAKW,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAEF,YACD,sBAAMI,UAAU,cAAhB,SACGjB,EAAMS,cAAcC,OAAO,IAAK,YAxC3C,GAA2BQ,aCDdC,EAAb,4MACEpB,MAAQ,CACNqB,UAAU,EACVC,UAAW,WAHf,EAMEC,iBAAmB,EANrB,EAwBEC,UAAY,SAACC,GACXA,EAAEC,iBAEF,EAAKd,SAAS,CAAES,UAAU,KA3B9B,EA8BEM,WAAa,WACX,EAAKf,SAAS,CAAES,UAAU,KA/B9B,EAkCEO,cAAgB,WACd,IAAMC,EAAgB3B,KAAK4B,MAAMC,WAAWpB,OAAO,GAEnD,MAAM,SAAN,OAAgBkB,IArCpB,uDAQE,WAAqB,IAAD,OAClBzB,KAAKmB,iBAAmBlB,OAAOC,aAAY,WACzC,EAAKM,SAAS,CAAEU,UAAW,EAAKM,oBAC/B,MAEHI,SAASC,iBAAiB,cAAe7B,KAAKoB,WAC9CQ,SAASC,iBAAiB,QAAS7B,KAAKuB,cAd5C,kCAiBE,WACEtB,OAAOY,cAAcb,KAAKmB,kBAE1BS,SAASE,oBAAoB,cAAe9B,KAAKoB,WACjDQ,SAASE,oBAAoB,QAAS9B,KAAKuB,cArB/C,oBAwCE,WACE,MAAgCvB,KAAKJ,MAA7BqB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WA9ClC,GAAyBH,aCNzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.9c89bec2.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  everySecondClock = 0;\n\n  componentDidMount() {\n    this.everySecondClock = window.setInterval(() => {\n      const currentTime = new Date();\n\n      // eslint-disable-next-line no-console\n      console.info(currentTime.toUTCString().slice(-12, -4));\n\n      this.setState({ today: currentTime });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.everySecondClock);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNamePropery = 0;\n\n  componentDidMount() {\n    this.clockNamePropery = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.stopClock);\n    document.addEventListener('click', this.startClock);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockNamePropery);\n\n    document.removeEventListener('contextmenu', this.stopClock);\n    document.removeEventListener('click', this.startClock);\n  }\n\n  stopClock = (e: MouseEvent) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  startClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  getRandomName = (): string => {\n    const value: string = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}